/*
 * This file was automatically generated by EvoSuite
 * Sun Sep 22 03:17:06 GMT 2019
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.GJChronology;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.chrono.JulianChronology;
import org.joda.time.chrono.LenientChronology;
import org.joda.time.convert.LongConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LongConverter_ESTest extends LongConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LongConverter longConverter0 = LongConverter.INSTANCE;
      Long long0 = new Long(0L);
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      long long1 = longConverter0.getInstantMillis(long0, buddhistChronology0);
      assertEquals(0L, long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LongConverter longConverter0 = LongConverter.INSTANCE;
      Long long0 = new Long(767L);
      GJChronology gJChronology0 = GJChronology.getInstanceUTC();
      long long1 = longConverter0.getInstantMillis(long0, gJChronology0);
      assertEquals(767L, long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LongConverter longConverter0 = LongConverter.INSTANCE;
      Long long0 = new Long((-270L));
      GJChronology gJChronology0 = GJChronology.getInstanceUTC();
      DateTimeZone dateTimeZone0 = gJChronology0.getZone();
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance(dateTimeZone0);
      long long1 = longConverter0.getInstantMillis(long0, islamicChronology0);
      assertEquals((-270L), long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongConverter longConverter0 = new LongConverter();
      Long long0 = new Long(0L);
      long long1 = longConverter0.getDurationMillis(long0);
      assertEquals(0L, long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LongConverter longConverter0 = new LongConverter();
      Long long0 = new Long(1L);
      long long1 = longConverter0.getDurationMillis(long0);
      assertEquals(1L, long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LongConverter longConverter0 = new LongConverter();
      Long long0 = new Long((-1879L));
      long long1 = longConverter0.getDurationMillis(long0);
      assertEquals((-1879L), long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LongConverter longConverter0 = new LongConverter();
      JulianChronology julianChronology0 = JulianChronology.getInstance();
      LenientChronology lenientChronology0 = LenientChronology.getInstance(julianChronology0);
      // Undeclared exception!
      try { 
        longConverter0.getInstantMillis((Object) null, lenientChronology0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.LongConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LongConverter longConverter0 = LongConverter.INSTANCE;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        longConverter0.getDurationMillis(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.Long
         //
         verifyException("org.joda.time.convert.LongConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LongConverter longConverter0 = new LongConverter();
      Class<?> class0 = longConverter0.getSupportedType();
      assertEquals("class java.lang.Long", class0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LongConverter longConverter0 = LongConverter.INSTANCE;
      // Undeclared exception!
      try { 
        longConverter0.getDurationMillis((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.LongConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongConverter longConverter0 = new LongConverter();
      Integer integer0 = new Integer((-1991));
      ISOChronology iSOChronology0 = ISOChronology.getInstance();
      // Undeclared exception!
      try { 
        longConverter0.getInstantMillis(integer0, iSOChronology0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to java.lang.Long
         //
         verifyException("org.joda.time.convert.LongConverter", e);
      }
  }
}
