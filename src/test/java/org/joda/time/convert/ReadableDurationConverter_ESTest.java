/*
 * This file was automatically generated by EvoSuite
 * Sun Sep 22 03:14:51 GMT 2019
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.Duration;
import org.joda.time.Hours;
import org.joda.time.ReadWritablePeriod;
import org.joda.time.Seconds;
import org.joda.time.convert.ReadableDurationConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReadableDurationConverter_ESTest extends ReadableDurationConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      Seconds seconds0 = Seconds.ZERO;
      Hours hours0 = seconds0.toStandardHours();
      Duration duration0 = hours0.toStandardDuration();
      long long0 = readableDurationConverter0.getDurationMillis(duration0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Duration duration0 = Duration.standardMinutes(2838L);
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      long long0 = readableDurationConverter0.getDurationMillis(duration0);
      assertEquals(170280000L, long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = ReadableDurationConverter.INSTANCE;
      Duration duration0 = Duration.standardHours((-55L));
      long long0 = readableDurationConverter0.getDurationMillis(duration0);
      assertEquals((-198000000L), long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = ReadableDurationConverter.INSTANCE;
      // Undeclared exception!
      try { 
        readableDurationConverter0.setInto((ReadWritablePeriod) null, (Object) null, (Chronology) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ReadableDurationConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = ReadableDurationConverter.INSTANCE;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        readableDurationConverter0.setInto((ReadWritablePeriod) null, object0, (Chronology) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.joda.time.ReadableDuration
         //
         verifyException("org.joda.time.convert.ReadableDurationConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = ReadableDurationConverter.INSTANCE;
      // Undeclared exception!
      try { 
        readableDurationConverter0.getDurationMillis((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ReadableDurationConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = new ReadableDurationConverter();
      Class<?> class0 = readableDurationConverter0.getSupportedType();
      assertEquals("interface org.joda.time.ReadableDuration", class0.toString());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ReadableDurationConverter readableDurationConverter0 = ReadableDurationConverter.INSTANCE;
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        readableDurationConverter0.getDurationMillis(integer0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Integer cannot be cast to org.joda.time.ReadableDuration
         //
         verifyException("org.joda.time.convert.ReadableDurationConverter", e);
      }
  }
}
